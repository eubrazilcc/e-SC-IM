network public (outbound = 'yes')
network private ()

system esc_server (
cpu.arch='x86_64' and
cpu.count>=2 and
memory.size>=1536m and
net_interface.0.connection = 'public' and
net_interface.0.dns_name = 'esc.i3m.upv.es' and
net_interface.1.connection = 'private' and
net_interface.1.dns_name = 'server' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version='12.04'
# and
# disk.0.applications contains (name='ansible.modules.cala.esc')
)

system engine (
cpu.arch='x86_64' and
cpu.count>=1 and
memory.size>=1536m and
net_interface.0.connection = 'private' and
net_interface.0.dns_name = 'engine-#N#' and
disk.0.os.name='linux' and
disk.0.os.flavour='ubuntu' and
disk.0.os.version='12.04'
)


configure esc_server (
@begin
---
# - roles:
#    - esc-db-init
#    - { role: esc-db, sudo_user: postgres }
#    - esc-server
@end
)

configure engine (
@begin
---
 - pre_tasks:
    - local_action: apt name=unzip state=present update_cache=yes
    - local_action: get_url url=https://github.com/eubrazilcc/e-SC-IM/raw/master/ansible-role-esc-engine.zip dest=/tmp/esc-engine.zip
    - local_action: file path=/etc/ansible/roles state=directory
    - local_action: unarchive src=/tmp/esc-engine.zip dest=/etc/ansible/roles
 - roles:
    - esc-engine
@end
)

deploy esc_server 1
deploy engine @input.VMs@